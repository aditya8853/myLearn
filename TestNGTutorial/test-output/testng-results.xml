<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="8" passed="6" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Test failed]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-08-09T07:42:50 IST" name="Suite" finished-at="2022-08-09T07:42:52 IST" duration-ms="2272">
    <groups>
    </groups>
    <test started-at="2022-08-09T07:42:50 IST" name="Vehicle Loan" finished-at="2022-08-09T07:42:52 IST" duration-ms="2080">
      <class name="Test.Basic1">
        <test-method is-config="true" signature="secondBefore()[pri:0, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:50 IST" name="secondBefore" finished-at="2022-08-09T07:42:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondBefore -->
        <test-method signature="demo()[pri:1, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:50 IST" name="demo" finished-at="2022-08-09T07:42:52 IST" duration-ms="2017" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.Basic1.demo(Basic1.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method signature="eem()[pri:2, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:52 IST" name="eem" finished-at="2022-08-09T07:42:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- eem -->
        <test-method is-config="true" signature="secondAfter()[pri:0, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:52 IST" name="secondAfter" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondAfter -->
      </class> <!-- Test.Basic1 -->
    </test> <!-- Vehicle Loan -->
    <test started-at="2022-08-09T07:42:52 IST" name="Home Loan" finished-at="2022-08-09T07:42:52 IST" duration-ms="49">
      <class name="Test.Basic2">
        <test-method is-config="true" signature="veryFirst()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:50 IST" name="veryFirst" finished-at="2022-08-09T07:42:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- veryFirst -->
        <test-method is-config="true" signature="preRequisite()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="preRequisite" finished-at="2022-08-09T07:42:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequisite -->
        <test-method is-config="true" signature="frequent()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent -->
        <test-method signature="carLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="carLoan" finished-at="2022-08-09T07:42:52 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aditya8853]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- carLoan -->
        <test-method is-config="true" signature="frequent2()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent2" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent2 -->
        <test-method is-config="true" signature="frequent()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent" finished-at="2022-08-09T07:42:52 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent -->
        <test-method is-config="true" signature="frequent()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent" finished-at="2022-08-09T07:42:52 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent -->
        <test-method signature="perform(java.lang.String,java.lang.String)[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="perform" data-provider="getData" finished-at="2022-08-09T07:42:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ThirdName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- perform -->
        <test-method signature="perform(java.lang.String,java.lang.String)[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="perform" data-provider="getData" finished-at="2022-08-09T07:42:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- perform -->
        <test-method signature="perform(java.lang.String,java.lang.String)[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="perform" data-provider="getData" finished-at="2022-08-09T07:42:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FirstName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- perform -->
        <test-method is-config="true" signature="frequent()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent -->
        <test-method is-config="true" signature="frequent2()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent2" finished-at="2022-08-09T07:42:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent2 -->
        <test-method is-config="true" signature="frequent2()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent2" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent2 -->
        <test-method is-config="true" signature="frequent2()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent2" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent2 -->
        <test-method is-config="true" signature="frequent()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent -->
        <test-method signature="bikeLoan()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="bikeLoan" finished-at="2022-08-09T07:42:52 IST" depends-on-methods="Test.Basic2.carLoan" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[<a href="D:\Selenium Training\Screenshots\screenshot.png" target="_blank">Screenshot link</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- bikeLoan -->
        <test-method is-config="true" signature="frequent2()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="frequent2" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frequent2 -->
        <test-method is-config="true" signature="post()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="post" finished-at="2022-08-09T07:42:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- post -->
        <test-method is-config="true" signature="veryLast()[pri:0, instance:Test.Basic2@a530d0a]" started-at="2022-08-09T07:42:52 IST" name="veryLast" finished-at="2022-08-09T07:42:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- veryLast -->
      </class> <!-- Test.Basic2 -->
      <class name="Test.Basic1">
        <test-method is-config="true" signature="onceAgain()[pri:0, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:50 IST" name="onceAgain" finished-at="2022-08-09T07:42:50 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceAgain -->
        <test-method is-config="true" signature="onceAfter()[pri:0, instance:Test.Basic1@306f16f3]" started-at="2022-08-09T07:42:52 IST" name="onceAfter" finished-at="2022-08-09T07:42:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onceAfter -->
      </class> <!-- Test.Basic1 -->
    </test> <!-- Home Loan -->
  </suite> <!-- Suite -->
</testng-results>
